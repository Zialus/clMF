language: cpp
dist: xenial

script:
  - mkdir build && cd build
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - cmake --build . --config Release
  - ctest -V -C Release

before_script:
  - eval "${MATRIX_EVAL}"
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then export BLOCKS_FLAG=8; export THREADS_FLAG=1; export VERSION_FLAG=1; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export BLOCKS_FLAG=8; export THREADS_FLAG=1; export VERSION_FLAG=2; fi

  - python3 --version
  - pip3 --version
  - sudo pip3 install virtualenv
  - virtualenv env -p python3
  - source env/bin/activate
  - python --version
  - pip --version
  - pip install scipy numpy

  - pushd .
  - cd data/a/
  - python a.py
  - python a_compress.py
  - popd
  - pushd .
  - cd data/b/
  - python b.py
  - python b_compress.py
  - popd
  - pushd .
  - cd data/c/
  - python c.py
  - python c_compress.py
  - popd
  - pushd .
  - cd data/simple/
  - python simple_compress.py
  - popd
  - pushd .
  - cd data/tricky_simple/
  - python tricky_simple_compress.py
  - cd ../toy_example/
  - python toy_example_compress.py
  - popd

  - deactivate

  - cmake --version
  - clinfo


matrix:
  include:

    ######## OSX CLANG ########
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++"
      before_install:
        - brew update
        - brew install llvm@3.9 && brew link --overwrite llvm@3.9 --force
      install: &mac_extra
        - brew install clinfo
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++"
      before_install:
        - brew update
        - brew install llvm@4 && brew link --overwrite llvm@4 --force
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++"
      before_install:
        - brew update
        - brew install llvm@5 && brew link --overwrite llvm@5 --force
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++"
      before_install:
        - brew update
        - brew install llvm@6 && brew link --overwrite llvm@6 --force
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++"
      before_install:
        - brew update
        - brew install llvm@7 && brew link --overwrite llvm@7 --force
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++"
      before_install:
        - brew update
        - brew install llvm@8 && brew link --overwrite llvm@8 --force
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang-9 && CXX=clang++"
      before_install:
        - brew update
        - brew install llvm@9 && brew link --overwrite llvm@9 --force
      install: *mac_extra

    ######## OSX GCC ########
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
      before_install:
        - brew update
        - brew install gcc@4.9
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      before_install:
        - brew update
        - brew install gcc@5
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      before_install:
        - brew update
        - brew install gcc@6
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      before_install:
        - brew update
        - brew install gcc@7
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      before_install:
        - brew update
        - brew install gcc@8
      install: *mac_extra
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
      before_install:
        - brew update
        - brew install gcc@9
      install: *mac_extra

    ######## LINUX CLANG ########
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-3.9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-3.9
            - libomp-dev
      install: &linux_extras
        - sudo apt-get install python3-pip
        - sudo apt-get install opencl-headers clinfo
        - source .ci/intel_opencl_install.sh
        - source .ci/cmake_install.sh
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-4.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-4.0
            - libomp-dev
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-5.0
            - libomp-dev
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-6.0
            - libomp-dev
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-7
            - libomp-dev
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-8
            - libomp-dev
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"
      addons:
        apt:
          sources:
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-9
            - libomp-dev
      install: *linux_extras

    ######## LINUX GCC ########
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-4.9
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-5
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-6
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-7
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-8
      install: *linux_extras
    - os: linux
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-9
      install: *linux_extras


    # SONARCLOUD
    - name: "SonarCloud"
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
        sonarcloud:
          organization: "zialus-github"
          token:
            secure: "iG5OD6txJ2Cu3ICKKGtpLGCeP/Tq53r5YKpZvP9rdfmumNKSVCFH2+XGSwMr9PQKXo+oYPuJ82Bt7tGc2lkK5N+qwHiGPJckbd0+uzqqAsm/HifElgxKLSkftk9wemxyOnQZDm34T8/6yskypXnVnOtTufa8CgV0KFHSgrzXMx0yfm8tFnSkgVX58JDF6EuZRAweau92QOdvHRID/h8VNWeQL+nU1vigdxroJ/jaJDpucpqQo3OgHPrZRaBh/f1DLDYL8Mu1xEb3NAfHrMExOdfBMD0+8MSUKxkqvR9ZiPSPLyLf6FriiEMFPpBIhtZ0PQC3NY/mKd1XITXkYQZrYmwSKoAz0Gc/3YTJcYi44WbcdgaxYiHpvtJz3toxFd9kEOo+PxkWHaam/1RCEOO/0LEckJRWAR+o95qQTD0ZZD3s8jYQhNQU8sOiLziWm4aUsnB7khqG/um2q3K3F3oQF+jPCY1iCQDcdc08PGH42l6IKlxe0ucntQuT8rUCBhRoLSFVN9W7GB2Id4cEyCZHDSAlkf8YtnKl38O8/zqiGCgtNhKsRccIH8TOeOFRXcxSSXbN/dw98ydKxYV0D8+tPQBCBLxFgatEIfCA6OOox3y39OWynaYkJnMVTv/Pp8F8D1Hr8QPY2foL2ODMInluaDo2Rg/1SgFVaLr+ERw4HO4="
      script:
        - git fetch --unshallow
        - mkdir build && cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - build-wrapper-linux-x86-64 --out-dir bw-output make clean all
        - ctest -V -C Release
        - cd ..
        - sonar-scanner
      install: *linux_extras
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    # COVERITY_SCAN
    - name: "Coverity Scan"
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
        coverity_scan:
          project:
            name: "Zialus/clMF"
          notification_email: raulmendesferreira@gmail.com
          build_command_prepend: "git fetch --unshallow && cov-configure --comptype gcc --compiler gcc-8 --template && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .."
          build_command: "make"
          branch_pattern: master
      install: *linux_extras
      script:
        - echo "Coverity Scan"
      env:
        - secure: "hlr1miuQzTT0d1PadVmhHeruokuHqHmGTKCMaqFIem+nO6TkL6oZCqD+SQ4WTeBTvQtdEr6k2YP97s1lm39UNjnFIgrccinNogtTBjlEeSO8yljWRcFjIDfToXEuRDXKixxYzKUB7/PxdUuGFIFTxyjQ4UjYWIYq9Y2h+qCSDTxtlI1z2RvIeVukMS0qYt4+ahU/3BNnCcQX/EJmbopZDBv9NqjitIwPesqK0CkXJdu640zaXlw5C+Aba3v+1fr4wbffXHiYQWEj9E39JYwokLmyiKJj5KJPz1tkA7iztDvvZ+cxTC5MIJCBmQNJskYQLul27O52vLvAJDlPMHkW9dZ5DEWZPtJrSyHWwaXNimMwZ+JOpum+RTfc9Mg1DPy4QrSudxokJQdSRj5BmCp71AAWzXkesA4RNMVS0A31Fv4HxW/yTpOPcZ1IBIadTygpG+pFSRzpKo5SREBBE0rzDHeNiqoibkMRSCBuyp8qud7eT+M/FzmpYAj+KxHeGQbB4Pwsgjq/ltxT4WhjDg6xtmK/4VCfwDR4aEMUzQPHFviwXZcfKWLhkr5R1Hnk8SZH63VTcufL1UKs1cKKt1lgY9AGFUUAf5VgbZWWE0XvVx2Oe5R/1YW9M9X7N6JUWxuK1jzvQLf/JdiHl13M83uUCWuwDB09QJ6nZs+ynOvofrE="
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
