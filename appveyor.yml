environment:
  BLOCKS_FLAG: '2'
  THREADS_FLAG: '2'
  matrix:
  - WHATOPENCL: INTEL
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - WHATOPENCL: NVIDIA
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - WHATOPENCL: INTEL
    APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
  - WHATOPENCL: NVIDIA
    APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
  - WHATOPENCL: POCL
    APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
  - WHATOPENCL: AMD
    APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604

init:
  - cmake --version

before_build:
  - ps: appveyor DownloadFile "https://ci.appveyor.com/api/projects/oblomov/clinfo/artifacts/clinfo.exe?job=platform:+x64" -FileName clinfo.exe
  # install OpenCL Runtime
  - choco install opencl-intel-cpu-runtime
  # Install OpenCL headers and libraries
  - set NUGETDIR=C:\NUGET
  - nuget install opencl-nug -Version 0.777.77 -OutputDirectory %NUGETDIR%
  - dir %NUGETDIR%\opencl-nug.0.777.77\build\native\
  - set OCL_ROOT=%NUGETDIR%\opencl-nug.0.777.77\build\native

build_script:
  - .\clinfo.exe
  - mkdir build && cd build
  - cmake -G "Visual Studio 15 2017 Win64" ..
  - cmake --build . --config Release

test_script:
  - ctest -V -C Release

artifacts:
  - path: exec

for:
-
  matrix:
    only:
    - WHATOPENCL: NVIDIA
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

  before_build:
    - ps: appveyor DownloadFile "https://ci.appveyor.com/api/projects/oblomov/clinfo/artifacts/clinfo.exe?job=platform:+x64" -FileName clinfo.exe
    - ps: $env:cuda_version = '10.0'
    - ps: $env:url = "https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_411.31_win10"
    - ps: $env:arguments = "-s nvcc_10.0"
    - ps: appveyor DownloadFile -Url $env:url -FileName C:\cuda.exe
    - C:\cuda.exe %arguments%
    - set CUDA_PATH=%ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v%CUDA_VERSION%
    - set PATH=%CUDA_PATH%\bin;%PATH%
    - nvcc -V
    # make clinfo not fail
    - ps: appveyor DownloadFile "http://registrationcenter-download.intel.com/akdlm/irc_nas/vcp/13794/opencl_runtime_18.1_x64_setup.msi"
    - opencl_runtime_18.1_x64_setup.msi /qn

  test_script:
    - echo "Appveyor machine doesn't have NVIDIA GPU"

-
  matrix:
    only:
    - WHATOPENCL: INTEL
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804

  init:
    - uname -a
  before_build:
    - sudo apt-get update
    - sudo apt-get install clinfo opencl-headers -y
    - source scripts/opencl_install.sh
    - echo $AMDAPPSDKROOT
    - echo $BLOCKS_FLAG
    - echo $THREADS_FLAG

  build_script:
    - clinfo
    - mkdir build && cd build
    - cmake -DCMAKE_BUILD_TYPE=Release ..
    - make

  test_script:
    - ctest -V -C Release

-
  matrix:
    only:
    - WHATOPENCL: AMD
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604

  init:
    - uname -a
  before_build:
    - sudo apt-get update
    - sudo apt-get install clinfo opencl-headers -y
    - source scripts/amdappsdk_install.sh
    - echo $AMDAPPSDKROOT
    - echo $BLOCKS_FLAG
    - echo $THREADS_FLAG

  build_script:
    - clinfo
    - mkdir build && cd build
    - cmake -DCMAKE_BUILD_TYPE=Release ..
    - make

  test_script:
    - ctest -V -C Release

-
  matrix:
    only:
    - WHATOPENCL: POCL
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804

  init:
    - uname -a
  before_build:
    - sudo apt-get update
    - sudo apt-get install libpocl-dev -y
    - sudo apt-get install opencl-headers clinfo -y
    - echo $AMDAPPSDKROOT
    - echo $BLOCKS_FLAG
    - echo $THREADS_FLAG

  build_script:
    - poclcc -l
    - clinfo
    - mkdir build && cd build
    - cmake -DCMAKE_BUILD_TYPE=Release .. -DOpenCL_LIBRARY=/usr/lib/x86_64-linux-gnu/libOpenCL.so.1
    - make

  test_script:
    - echo "POCL SEGFAULTS"

-
  matrix:
    only:
    - WHATOPENCL: NVIDIA
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804

  init:
    - uname -a
  before_build:
    - wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.0.130-1_amd64.deb
    - sudo dpkg -i cuda-repo-ubuntu1804_10.0.130-1_amd64.deb
    - sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
    - sudo apt-get update
    - sudo apt-get install nvidia-cuda-toolkit -y
    - sudo apt-get clean
    - sudo apt-get install clinfo -y
    - export CUDA_PATH=/usr/local/cuda
    - echo $CUDA_PATH
    - echo $BLOCKS_FLAG
    - echo $THREADS_FLAG

  build_script:
    - clinfo
    - mkdir build && cd build
    - cmake -DCMAKE_BUILD_TYPE=Release ..
    - make

  test_script:
    - echo "Appveyor machine doesn't have NVIDIA GPU"
